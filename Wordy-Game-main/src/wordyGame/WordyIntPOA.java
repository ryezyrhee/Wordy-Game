package wordyGame;


/**
* wordyGame/WordyIntPOA.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from Wordy.idl
* Sunday, June 18, 2023 11:16:05 PM SGT
*/

public abstract class WordyIntPOA extends org.omg.PortableServer.Servant
 implements wordyGame.WordyIntOperations, org.omg.CORBA.portable.InvokeHandler
{

  // Constructors

  private static java.util.Hashtable _methods = new java.util.Hashtable ();
  static
  {
    _methods.put ("verifyLogin", new java.lang.Integer (0));
    _methods.put ("newGame", new java.lang.Integer (1));
    _methods.put ("receiveLetters", new java.lang.Integer (2));
    _methods.put ("submitWord", new java.lang.Integer (3));
    _methods.put ("getGameTime", new java.lang.Integer (4));
    _methods.put ("startGameTime", new java.lang.Integer (5));
    _methods.put ("getGameState", new java.lang.Integer (6));
    _methods.put ("getWinState", new java.lang.Integer (7));
    _methods.put ("getRoundWin", new java.lang.Integer (8));
    _methods.put ("signalRoundEnd", new java.lang.Integer (9));
    _methods.put ("getGameWin", new java.lang.Integer (10));
    _methods.put ("logout", new java.lang.Integer (11));
    _methods.put ("topPlayers", new java.lang.Integer (12));
    _methods.put ("topWords", new java.lang.Integer (13));
  }

  public org.omg.CORBA.portable.OutputStream _invoke (String $method,
                                org.omg.CORBA.portable.InputStream in,
                                org.omg.CORBA.portable.ResponseHandler $rh)
  {
    org.omg.CORBA.portable.OutputStream out = null;
    java.lang.Integer __method = (java.lang.Integer)_methods.get ($method);
    if (__method == null)
      throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);

    switch (__method.intValue ())
    {

  //checks user login
       case 0:  // wordyGame/WordyInt/verifyLogin
       {
         try {
           wordyGame.Player p = wordyGame.PlayerHelper.read (in);
           boolean $result = false;
           $result = this.verifyLogin (p);
           out = $rh.createReply();
           out.write_boolean ($result);
         } catch (wordyGame.invalidCredentials $ex) {
           out = $rh.createExceptionReply ();
           wordyGame.invalidCredentialsHelper.write (out, $ex);
         } catch (wordyGame.invalidUser $ex) {
           out = $rh.createExceptionReply ();
           wordyGame.invalidUserHelper.write (out, $ex);
         } catch (wordyGame.existingSession $ex) {
           out = $rh.createExceptionReply ();
           wordyGame.existingSessionHelper.write (out, $ex);
         }
         break;
       }


  //starts a new game at player's initiate
       case 1:  // wordyGame/WordyInt/newGame
       {
         try {
           String username = in.read_string ();
           this.newGame (username);
           out = $rh.createReply();
         } catch (wordyGame.noOtherPlayersAvailable $ex) {
           out = $rh.createExceptionReply ();
           wordyGame.noOtherPlayersAvailableHelper.write (out, $ex);
         }
         break;
       }


  //gets letter array from server
       case 2:  // wordyGame/WordyInt/receiveLetters
       {
         String username = in.read_string ();
         char $result[] = null;
         $result = this.receiveLetters (username);
         out = $rh.createReply();
         wordyGame.CharSeqHelper.write (out, $result);
         break;
       }


  //validates a submitted word
       case 3:  // wordyGame/WordyInt/submitWord
       {
         try {
           String word = in.read_string ();
           String username = in.read_string ();
           this.submitWord (word, username);
           out = $rh.createReply();
         } catch (wordyGame.invalidWord $ex) {
           out = $rh.createExceptionReply ();
           wordyGame.invalidWordHelper.write (out, $ex);
         } catch (wordyGame.noSubmittedWord $ex) {
           out = $rh.createExceptionReply ();
           wordyGame.noSubmittedWordHelper.write (out, $ex);
         } catch (wordyGame.invalidLetters $ex) {
           out = $rh.createExceptionReply ();
           wordyGame.invalidLettersHelper.write (out, $ex);
         }
         break;
       }


  //gets game timer
       case 4:  // wordyGame/WordyInt/getGameTime
       {
         String username = in.read_string ();
         int $result = (int)0;
         $result = this.getGameTime (username);
         out = $rh.createReply();
         out.write_long ($result);
         break;
       }


  //start timer
       case 5:  // wordyGame/WordyInt/startGameTime
       {
         int seconds = in.read_long ();
         String username = in.read_string ();
         this.startGameTime (seconds, username);
         out = $rh.createReply();
         break;
       }


  //checks if a game is ongoing
       case 6:  // wordyGame/WordyInt/getGameState
       {
         String username = in.read_string ();
         boolean $result = false;
         $result = this.getGameState (username);
         out = $rh.createReply();
         out.write_boolean ($result);
         break;
       }


  //checks the winners of a game
       case 7:  // wordyGame/WordyInt/getWinState
       {
         String username = in.read_string ();
         boolean $result = false;
         $result = this.getWinState (username);
         out = $rh.createReply();
         out.write_boolean ($result);
         break;
       }


  //gets winner for the current round
       case 8:  // wordyGame/WordyInt/getRoundWin
       {
         try {
           String username = in.read_string ();
           String $result = null;
           $result = this.getRoundWin (username);
           out = $rh.createReply();
           out.write_string ($result);
         } catch (wordyGame.noWinner $ex) {
           out = $rh.createExceptionReply ();
           wordyGame.noWinnerHelper.write (out, $ex);
         } catch (wordyGame.drawWinners $ex) {
           out = $rh.createExceptionReply ();
           wordyGame.drawWinnersHelper.write (out, $ex);
         }
         break;
       }

       case 9:  // wordyGame/WordyInt/signalRoundEnd
       {
         String username = in.read_string ();
         this.signalRoundEnd (username);
         out = $rh.createReply();
         break;
       }


  //gets winner for game
       case 10:  // wordyGame/WordyInt/getGameWin
       {
         String username = in.read_string ();
         String $result = null;
         $result = this.getGameWin (username);
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       case 11:  // wordyGame/WordyInt/logout
       {
         String username = in.read_string ();
         this.logout (username);
         out = $rh.createReply();
         break;
       }


  //returns a list of top 5 players
       case 12:  // wordyGame/WordyInt/topPlayers
       {
         String $result[] = null;
         $result = this.topPlayers ();
         out = $rh.createReply();
         wordyGame.StringSeqHelper.write (out, $result);
         break;
       }


  //returns a list of top 5 submitted word
       case 13:  // wordyGame/WordyInt/topWords
       {
         wordyGame.Word $result[] = null;
         $result = this.topWords ();
         out = $rh.createReply();
         wordyGame.WordSeqHelper.write (out, $result);
         break;
       }

       default:
         throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);
    }

    return out;
  } // _invoke

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:wordyGame/WordyInt:1.0"};

  public String[] _all_interfaces (org.omg.PortableServer.POA poa, byte[] objectId)
  {
    return (String[])__ids.clone ();
  }

  public WordyInt _this() 
  {
    return WordyIntHelper.narrow(
    super._this_object());
  }

  public WordyInt _this(org.omg.CORBA.ORB orb) 
  {
    return WordyIntHelper.narrow(
    super._this_object(orb));
  }


} // class WordyIntPOA
