package wordyGame;


/**
* wordyGame/_WordyIntStub.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from Wordy.idl
* Sunday, June 18, 2023 11:16:05 PM SGT
*/

public class _WordyIntStub extends org.omg.CORBA.portable.ObjectImpl implements wordyGame.WordyInt
{


  //checks user login
  public boolean verifyLogin (wordyGame.Player p) throws wordyGame.invalidCredentials, wordyGame.invalidUser, wordyGame.existingSession
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("verifyLogin", true);
                wordyGame.PlayerHelper.write ($out, p);
                $in = _invoke ($out);
                boolean $result = $in.read_boolean ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                if (_id.equals ("IDL:wordyGame/invalidCredentials:1.0"))
                    throw wordyGame.invalidCredentialsHelper.read ($in);
                else if (_id.equals ("IDL:wordyGame/invalidUser:1.0"))
                    throw wordyGame.invalidUserHelper.read ($in);
                else if (_id.equals ("IDL:wordyGame/existingSession:1.0"))
                    throw wordyGame.existingSessionHelper.read ($in);
                else
                    throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return verifyLogin (p        );
            } finally {
                _releaseReply ($in);
            }
  } // verifyLogin


  //starts a new game at player's initiate
  public void newGame (String username) throws wordyGame.noOtherPlayersAvailable
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("newGame", true);
                $out.write_string (username);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                if (_id.equals ("IDL:wordyGame/noOtherPlayersAvailable:1.0"))
                    throw wordyGame.noOtherPlayersAvailableHelper.read ($in);
                else
                    throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                newGame (username        );
            } finally {
                _releaseReply ($in);
            }
  } // newGame


  //gets letter array from server
  public char[] receiveLetters (String username)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("receiveLetters", true);
                $out.write_string (username);
                $in = _invoke ($out);
                char $result[] = wordyGame.CharSeqHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return receiveLetters (username        );
            } finally {
                _releaseReply ($in);
            }
  } // receiveLetters


  //validates a submitted word
  public void submitWord (String word, String username) throws wordyGame.invalidWord, wordyGame.noSubmittedWord, wordyGame.invalidLetters
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("submitWord", true);
                $out.write_string (word);
                $out.write_string (username);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                if (_id.equals ("IDL:wordyGame/invalidWord:1.0"))
                    throw wordyGame.invalidWordHelper.read ($in);
                else if (_id.equals ("IDL:wordyGame/noSubmittedWord:1.0"))
                    throw wordyGame.noSubmittedWordHelper.read ($in);
                else if (_id.equals ("IDL:wordyGame/invalidLetters:1.0"))
                    throw wordyGame.invalidLettersHelper.read ($in);
                else
                    throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                submitWord (word, username        );
            } finally {
                _releaseReply ($in);
            }
  } // submitWord


  //gets game timer
  public int getGameTime (String username)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("getGameTime", true);
                $out.write_string (username);
                $in = _invoke ($out);
                int $result = $in.read_long ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return getGameTime (username        );
            } finally {
                _releaseReply ($in);
            }
  } // getGameTime


  //start timer
  public void startGameTime (int seconds, String username)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("startGameTime", true);
                $out.write_long (seconds);
                $out.write_string (username);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                startGameTime (seconds, username        );
            } finally {
                _releaseReply ($in);
            }
  } // startGameTime


  //checks if a game is ongoing
  public boolean getGameState (String username)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("getGameState", true);
                $out.write_string (username);
                $in = _invoke ($out);
                boolean $result = $in.read_boolean ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return getGameState (username        );
            } finally {
                _releaseReply ($in);
            }
  } // getGameState


  //checks the winners of a game
  public boolean getWinState (String username)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("getWinState", true);
                $out.write_string (username);
                $in = _invoke ($out);
                boolean $result = $in.read_boolean ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return getWinState (username        );
            } finally {
                _releaseReply ($in);
            }
  } // getWinState


  //gets winner for the current round
  public String getRoundWin (String username) throws wordyGame.noWinner, wordyGame.drawWinners
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("getRoundWin", true);
                $out.write_string (username);
                $in = _invoke ($out);
                String $result = $in.read_string ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                if (_id.equals ("IDL:wordyGame/noWinner:1.0"))
                    throw wordyGame.noWinnerHelper.read ($in);
                else if (_id.equals ("IDL:wordyGame/drawWinners:1.0"))
                    throw wordyGame.drawWinnersHelper.read ($in);
                else
                    throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return getRoundWin (username        );
            } finally {
                _releaseReply ($in);
            }
  } // getRoundWin

  public void signalRoundEnd (String username)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("signalRoundEnd", true);
                $out.write_string (username);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                signalRoundEnd (username        );
            } finally {
                _releaseReply ($in);
            }
  } // signalRoundEnd


  //gets winner for game
  public String getGameWin (String username)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("getGameWin", true);
                $out.write_string (username);
                $in = _invoke ($out);
                String $result = $in.read_string ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return getGameWin (username        );
            } finally {
                _releaseReply ($in);
            }
  } // getGameWin

  public void logout (String username)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("logout", true);
                $out.write_string (username);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                logout (username        );
            } finally {
                _releaseReply ($in);
            }
  } // logout


  //returns a list of top 5 players
  public String[] topPlayers ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("topPlayers", true);
                $in = _invoke ($out);
                String $result[] = wordyGame.StringSeqHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return topPlayers (        );
            } finally {
                _releaseReply ($in);
            }
  } // topPlayers


  //returns a list of top 5 submitted word
  public wordyGame.Word[] topWords ()
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("topWords", true);
                $in = _invoke ($out);
                wordyGame.Word $result[] = wordyGame.WordSeqHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return topWords (        );
            } finally {
                _releaseReply ($in);
            }
  } // topWords

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:wordyGame/WordyInt:1.0"};

  public String[] _ids ()
  {
    return (String[])__ids.clone ();
  }

  private void readObject (java.io.ObjectInputStream s) throws java.io.IOException
  {
     String str = s.readUTF ();
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     org.omg.CORBA.Object obj = orb.string_to_object (str);
     org.omg.CORBA.portable.Delegate delegate = ((org.omg.CORBA.portable.ObjectImpl) obj)._get_delegate ();
     _set_delegate (delegate);
   } finally {
     orb.destroy() ;
   }
  }

  private void writeObject (java.io.ObjectOutputStream s) throws java.io.IOException
  {
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     String str = orb.object_to_string (this);
     s.writeUTF (str);
   } finally {
     orb.destroy() ;
   }
  }
} // class _WordyIntStub
